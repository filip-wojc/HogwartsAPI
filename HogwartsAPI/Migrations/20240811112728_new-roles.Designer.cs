// <auto-generated />
using System;
using HogwartsAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HogwartsAPI.Migrations
{
    [DbContext(typeof(HogwartDbContext))]
    [Migration("20240811112728_new-roles")]
    partial class newroles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Core", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A feather from a phoenix",
                            Name = "Phoenix Feather"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A heartstring from a dragon",
                            Name = "Dragon Heartstring"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A hair from a unicorn",
                            Name = "Unicorn Hair"
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn how to defend against dark magic.",
                            DifficultyLevel = 3,
                            Name = "Defense Against the Dark Arts",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn how to brew magical potions.",
                            DifficultyLevel = 5,
                            Name = "Potions",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn how to cast advanced speels.",
                            DifficultyLevel = 2,
                            Name = "Spells",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn how to take care of plants.",
                            DifficultyLevel = 3,
                            Name = "Herbology",
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("TrophyCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Brave and daring",
                            Name = "Gryffindor",
                            TeacherId = 3,
                            TrophyCount = 10
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Loyal and fair",
                            Name = "Hufflepuff",
                            TeacherId = 4,
                            TrophyCount = 5
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Wise and clever",
                            Name = "Ravenclaw",
                            TeacherId = 5,
                            TrophyCount = 7
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cunning and ambitious",
                            Name = "Slytherin",
                            TeacherId = 2,
                            TrophyCount = 8
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("HasMagicAbility")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StudentId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasMagicAbility = false,
                            Name = "Hedwig",
                            StudentId = 1,
                            Type = "Owl"
                        },
                        new
                        {
                            Id = 2,
                            HasMagicAbility = true,
                            Name = "Crookshanks",
                            StudentId = 2,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            HasMagicAbility = false,
                            Name = "Teodora",
                            StudentId = 4,
                            Type = "Frog"
                        },
                        new
                        {
                            Id = 4,
                            HasMagicAbility = true,
                            Name = "Random Owl",
                            StudentId = 7,
                            Type = "Owl"
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HouseManager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "WandsManager"
                        },
                        new
                        {
                            Id = 4,
                            Name = "CourseManager"
                        },
                        new
                        {
                            Id = 5,
                            Name = "PetManager"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolYear")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("WandId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1980, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 1,
                            Name = "Harry",
                            SchoolYear = 1,
                            Surname = "Potter",
                            WandId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1979, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 1,
                            Name = "Hermione",
                            SchoolYear = 1,
                            Surname = "Granger",
                            WandId = 3
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1976, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 1,
                            Name = "Fred",
                            SchoolYear = 3,
                            Surname = "Weasley",
                            WandId = 4
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1978, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 2,
                            Name = "Hanna",
                            SchoolYear = 2,
                            Surname = "Abbot",
                            WandId = 3
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 2,
                            Name = "Cedric",
                            SchoolYear = 4,
                            Surname = "Diggory",
                            WandId = 5
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1979, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 3,
                            Name = "Cho",
                            SchoolYear = 1,
                            Surname = "Chang",
                            WandId = 5
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1980, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 4,
                            Name = "Draco",
                            SchoolYear = 1,
                            Surname = "Malfoy",
                            WandId = 2
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1979, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HouseId = 4,
                            Name = "Vincent",
                            SchoolYear = 1,
                            Surname = "Crabbe",
                            WandId = 2
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WandId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1881, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Albus",
                            Surname = "Dumbledore",
                            WandId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1930, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Severus",
                            Surname = "Snape",
                            WandId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1922, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Minerva",
                            Surname = "McGonagall",
                            WandId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1951, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pomona",
                            Surname = "Sprout",
                            WandId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1943, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Filius",
                            Surname = "Flitwick",
                            WandId = 5
                        });
                });

            modelBuilder.Entity("HogwartsAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Wand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoreId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WoodType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoreId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Wands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Brown",
                            CoreId = 1,
                            Length = 11.0,
                            Price = 150m,
                            WoodType = "Holly"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            CoreId = 2,
                            Length = 10.0,
                            Price = 120m,
                            WoodType = "Yew"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Light Brown",
                            CoreId = 3,
                            Length = 9.5,
                            Price = 90m,
                            WoodType = "Elm"
                        },
                        new
                        {
                            Id = 4,
                            Color = "White",
                            CoreId = 2,
                            Length = 12.0,
                            Price = 80m,
                            WoodType = "Oak"
                        },
                        new
                        {
                            Id = 5,
                            Color = "Dark Brown",
                            CoreId = 3,
                            Length = 10.5,
                            Price = 190m,
                            WoodType = "Ivory"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HogwartsAPI.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Course", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("HogwartsAPI.Entities.Teacher", "Teacher")
                        .WithOne("Course")
                        .HasForeignKey("HogwartsAPI.Entities.Course", "TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.House", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.Teacher", "Teacher")
                        .WithOne("House")
                        .HasForeignKey("HogwartsAPI.Entities.House", "TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Pet", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("HogwartsAPI.Entities.Student", "Student")
                        .WithMany("Pets")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Student", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.House", "House")
                        .WithMany("Students")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HogwartsAPI.Entities.Wand", "Wand")
                        .WithMany("StudentOwners")
                        .HasForeignKey("WandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("House");

                    b.Navigation("Wand");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Teacher", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.Wand", "Wand")
                        .WithMany("TeacherOwners")
                        .HasForeignKey("WandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wand");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.User", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Wand", b =>
                {
                    b.HasOne("HogwartsAPI.Entities.Core", "Core")
                        .WithMany("Wands")
                        .HasForeignKey("CoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HogwartsAPI.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("Core");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Core", b =>
                {
                    b.Navigation("Wands");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.House", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Student", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Teacher", b =>
                {
                    b.Navigation("Course");

                    b.Navigation("House");
                });

            modelBuilder.Entity("HogwartsAPI.Entities.Wand", b =>
                {
                    b.Navigation("StudentOwners");

                    b.Navigation("TeacherOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
